{"ast":null,"code":"var _excluded = [\"cellProps\", \"columns\", \"data\", \"groupBy\", \"groups\", \"groupState\", \"pinnedOffset\", \"primaryProperty\", \"onMore\", \"onSelect\", \"onToggle\", \"onUpdate\", \"replace\", \"rowProps\", \"selected\", \"size\", \"step\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useMemo } from 'react';\nimport { Cell } from './Cell';\nimport { ExpanderCell } from './ExpanderCell';\nimport { StyledDataTableBody, StyledDataTableRow } from './StyledDataTable';\nimport { CheckBox } from '../CheckBox/CheckBox';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { TableRow } from '../TableRow';\nimport { TableCell } from '../TableCell';\nimport { datumValue, normalizeRowCellProps } from './buildState';\nexport var GroupedBody = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var cellPropsProp = _ref.cellProps,\n      columns = _ref.columns,\n      data = _ref.data,\n      groupBy = _ref.groupBy,\n      groups = _ref.groups,\n      groupState = _ref.groupState,\n      pinnedOffset = _ref.pinnedOffset,\n      primaryProperty = _ref.primaryProperty,\n      onMore = _ref.onMore,\n      onSelect = _ref.onSelect,\n      onToggle = _ref.onToggle,\n      onUpdate = _ref.onUpdate,\n      replace = _ref.replace,\n      rowProps = _ref.rowProps,\n      selected = _ref.selected,\n      size = _ref.size,\n      step = _ref.step,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var items = useMemo(function () {\n    var nextItems = [];\n    groups.forEach(function (group) {\n      var _ref2 = groupState[group.key] || {\n        expanded: true\n      },\n          expanded = _ref2.expanded;\n\n      var memberCount = group.data.length;\n      var groupSelected = [];\n      var isGroupSelected = false;\n\n      if (memberCount > 1 || onUpdate && group.key) {\n        // need a header\n        var primaryKeys = group.data.map(function (datum) {\n          return datum[primaryProperty];\n        });\n        groupSelected = primaryKeys && selected ? primaryKeys.filter(function (val) {\n          return selected.includes(val);\n        }) : [];\n        isGroupSelected = groupBy.select ? groupBy.select[group.key] === 'all' : groupSelected.length === group.data.length && groupSelected.length > 0;\n        var indeterminate = groupBy.select ? groupBy.select[group.key] === 'some' : groupSelected.length > 0 && groupSelected.length < group.data.length;\n        nextItems.push({\n          expanded: expanded,\n          key: group.key,\n          datum: group.datum,\n          context: 'groupHeader',\n          isSelected: isGroupSelected,\n          indeterminate: indeterminate,\n          onChange: function onChange() {\n            var nextSelected = isGroupSelected || indeterminate ? selected.filter(function (s) {\n              return !groupSelected.includes(s);\n            }) : [].concat(selected, primaryKeys);\n\n            if (groupBy.onSelect) {\n              groupBy.onSelect(nextSelected, group.datum, groupBy.select);\n            } else {\n              onSelect(nextSelected, group.datum);\n            }\n          }\n        });\n      }\n\n      if (!onUpdate && memberCount === 1 || expanded) {\n        // add the group members\n        group.data.forEach(function (datum, index) {\n          var primaryValue = primaryProperty ? datumValue(datum, primaryProperty) : undefined;\n          var isSelected = selected == null ? void 0 : selected.includes(primaryValue);\n          nextItems.push({\n            key: datum[primaryProperty],\n            primaryValue: primaryProperty ? datumValue(datum, primaryProperty) : undefined,\n            datum: datum,\n            context: memberCount > 1 && index === memberCount - 1 ? 'groupEnd' : 'body',\n            isSelected: isSelected,\n            onChange: function onChange() {\n              var nextSelected = isSelected ? selected.filter(function (s) {\n                return s !== primaryValue;\n              }) : [].concat(selected, [primaryValue]);\n              onSelect(nextSelected, datum);\n            }\n          });\n        });\n      }\n    });\n    return nextItems;\n  }, [groups, groupBy, groupState, primaryProperty, selected, onSelect, onUpdate]);\n  return /*#__PURE__*/React.createElement(StyledDataTableBody, _extends({\n    ref: ref,\n    size: size\n  }, rest), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    items: items,\n    onMore: onMore,\n    replace: replace,\n    renderMarker: function renderMarker(marker) {\n      return /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, null, marker));\n    },\n    step: step\n  }, function (row, index, rowRef) {\n    var context = row.context,\n        datum = row.datum,\n        expanded = row.expanded,\n        indeterminate = row.indeterminate,\n        isSelected = row.isSelected,\n        key = row.key,\n        onChange = row.onChange,\n        primaryValue = row.primaryValue;\n    var cellProps = normalizeRowCellProps(rowProps, cellPropsProp, primaryValue, index);\n    return /*#__PURE__*/React.createElement(StyledDataTableRow, {\n      ref: rowRef,\n      key: key,\n      size: size\n    }, /*#__PURE__*/React.createElement(ExpanderCell, {\n      background: cellProps.background,\n      border: cellProps.border,\n      context: context,\n      pad: cellProps.pad,\n      onToggle: context === 'groupHeader' ? onToggle(key) : undefined,\n      expanded: expanded\n    }), (selected || onSelect) && /*#__PURE__*/React.createElement(TableCell, {\n      background: cellProps.background,\n      plain: \"noPad\",\n      size: \"auto\"\n    }, /*#__PURE__*/React.createElement(CheckBox, {\n      a11yTitle: (isSelected ? 'unselect' : 'select') + \" \" + (context === 'groupHeader' ? key : primaryValue),\n      checked: isSelected,\n      indeterminate: indeterminate,\n      disabled: !onSelect,\n      onChange: onChange,\n      pad: cellProps.pad\n    })), columns.map(function (column) {\n      var scope;\n\n      if (context === 'groupHeader') {\n        scope = column.property === groupBy.property ? 'row' : undefined;\n      } else {\n        scope = column.primary ? 'row' : undefined;\n      }\n\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: column.property,\n        background: cellProps.background,\n        border: cellProps.border,\n        context: context,\n        column: column,\n        datum: datum,\n        pad: cellProps.pad,\n        scope: scope,\n        pinnedOffset: context === 'groupHeader' && pinnedOffset && pinnedOffset[column.property]\n      });\n    }));\n  }));\n});","map":{"version":3,"sources":["C:/Personal-Portfolio/node_modules/grommet/es6/components/DataTable/GroupedBody.js"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useMemo","Cell","ExpanderCell","StyledDataTableBody","StyledDataTableRow","CheckBox","InfiniteScroll","TableRow","TableCell","datumValue","normalizeRowCellProps","GroupedBody","_ref","ref","cellPropsProp","cellProps","columns","data","groupBy","groups","groupState","pinnedOffset","primaryProperty","onMore","onSelect","onToggle","onUpdate","replace","rowProps","selected","size","step","rest","items","nextItems","forEach","group","_ref2","expanded","memberCount","groupSelected","isGroupSelected","primaryKeys","map","datum","filter","val","includes","select","indeterminate","push","context","isSelected","onChange","nextSelected","s","concat","index","primaryValue","undefined","createElement","renderMarker","marker","row","rowRef","background","border","pad","plain","a11yTitle","checked","disabled","column","scope","property","primary"],"mappings":"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","sourcesContent":["var _excluded = [\"cellProps\", \"columns\", \"data\", \"groupBy\", \"groups\", \"groupState\", \"pinnedOffset\", \"primaryProperty\", \"onMore\", \"onSelect\", \"onToggle\", \"onUpdate\", \"replace\", \"rowProps\", \"selected\", \"size\", \"step\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useMemo } from 'react';\nimport { Cell } from './Cell';\nimport { ExpanderCell } from './ExpanderCell';\nimport { StyledDataTableBody, StyledDataTableRow } from './StyledDataTable';\nimport { CheckBox } from '../CheckBox/CheckBox';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { TableRow } from '../TableRow';\nimport { TableCell } from '../TableCell';\nimport { datumValue, normalizeRowCellProps } from './buildState';\nexport var GroupedBody = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var cellPropsProp = _ref.cellProps,\n      columns = _ref.columns,\n      data = _ref.data,\n      groupBy = _ref.groupBy,\n      groups = _ref.groups,\n      groupState = _ref.groupState,\n      pinnedOffset = _ref.pinnedOffset,\n      primaryProperty = _ref.primaryProperty,\n      onMore = _ref.onMore,\n      onSelect = _ref.onSelect,\n      onToggle = _ref.onToggle,\n      onUpdate = _ref.onUpdate,\n      replace = _ref.replace,\n      rowProps = _ref.rowProps,\n      selected = _ref.selected,\n      size = _ref.size,\n      step = _ref.step,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var items = useMemo(function () {\n    var nextItems = [];\n    groups.forEach(function (group) {\n      var _ref2 = groupState[group.key] || {\n        expanded: true\n      },\n          expanded = _ref2.expanded;\n\n      var memberCount = group.data.length;\n      var groupSelected = [];\n      var isGroupSelected = false;\n\n      if (memberCount > 1 || onUpdate && group.key) {\n        // need a header\n        var primaryKeys = group.data.map(function (datum) {\n          return datum[primaryProperty];\n        });\n        groupSelected = primaryKeys && selected ? primaryKeys.filter(function (val) {\n          return selected.includes(val);\n        }) : [];\n        isGroupSelected = groupBy.select ? groupBy.select[group.key] === 'all' : groupSelected.length === group.data.length && groupSelected.length > 0;\n        var indeterminate = groupBy.select ? groupBy.select[group.key] === 'some' : groupSelected.length > 0 && groupSelected.length < group.data.length;\n        nextItems.push({\n          expanded: expanded,\n          key: group.key,\n          datum: group.datum,\n          context: 'groupHeader',\n          isSelected: isGroupSelected,\n          indeterminate: indeterminate,\n          onChange: function onChange() {\n            var nextSelected = isGroupSelected || indeterminate ? selected.filter(function (s) {\n              return !groupSelected.includes(s);\n            }) : [].concat(selected, primaryKeys);\n\n            if (groupBy.onSelect) {\n              groupBy.onSelect(nextSelected, group.datum, groupBy.select);\n            } else {\n              onSelect(nextSelected, group.datum);\n            }\n          }\n        });\n      }\n\n      if (!onUpdate && memberCount === 1 || expanded) {\n        // add the group members\n        group.data.forEach(function (datum, index) {\n          var primaryValue = primaryProperty ? datumValue(datum, primaryProperty) : undefined;\n          var isSelected = selected == null ? void 0 : selected.includes(primaryValue);\n          nextItems.push({\n            key: datum[primaryProperty],\n            primaryValue: primaryProperty ? datumValue(datum, primaryProperty) : undefined,\n            datum: datum,\n            context: memberCount > 1 && index === memberCount - 1 ? 'groupEnd' : 'body',\n            isSelected: isSelected,\n            onChange: function onChange() {\n              var nextSelected = isSelected ? selected.filter(function (s) {\n                return s !== primaryValue;\n              }) : [].concat(selected, [primaryValue]);\n              onSelect(nextSelected, datum);\n            }\n          });\n        });\n      }\n    });\n    return nextItems;\n  }, [groups, groupBy, groupState, primaryProperty, selected, onSelect, onUpdate]);\n  return /*#__PURE__*/React.createElement(StyledDataTableBody, _extends({\n    ref: ref,\n    size: size\n  }, rest), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    items: items,\n    onMore: onMore,\n    replace: replace,\n    renderMarker: function renderMarker(marker) {\n      return /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, null, marker));\n    },\n    step: step\n  }, function (row, index, rowRef) {\n    var context = row.context,\n        datum = row.datum,\n        expanded = row.expanded,\n        indeterminate = row.indeterminate,\n        isSelected = row.isSelected,\n        key = row.key,\n        onChange = row.onChange,\n        primaryValue = row.primaryValue;\n    var cellProps = normalizeRowCellProps(rowProps, cellPropsProp, primaryValue, index);\n    return /*#__PURE__*/React.createElement(StyledDataTableRow, {\n      ref: rowRef,\n      key: key,\n      size: size\n    }, /*#__PURE__*/React.createElement(ExpanderCell, {\n      background: cellProps.background,\n      border: cellProps.border,\n      context: context,\n      pad: cellProps.pad,\n      onToggle: context === 'groupHeader' ? onToggle(key) : undefined,\n      expanded: expanded\n    }), (selected || onSelect) && /*#__PURE__*/React.createElement(TableCell, {\n      background: cellProps.background,\n      plain: \"noPad\",\n      size: \"auto\"\n    }, /*#__PURE__*/React.createElement(CheckBox, {\n      a11yTitle: (isSelected ? 'unselect' : 'select') + \" \" + (context === 'groupHeader' ? key : primaryValue),\n      checked: isSelected,\n      indeterminate: indeterminate,\n      disabled: !onSelect,\n      onChange: onChange,\n      pad: cellProps.pad\n    })), columns.map(function (column) {\n      var scope;\n\n      if (context === 'groupHeader') {\n        scope = column.property === groupBy.property ? 'row' : undefined;\n      } else {\n        scope = column.primary ? 'row' : undefined;\n      }\n\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: column.property,\n        background: cellProps.background,\n        border: cellProps.border,\n        context: context,\n        column: column,\n        datum: datum,\n        pad: cellProps.pad,\n        scope: scope,\n        pinnedOffset: context === 'groupHeader' && pinnedOffset && pinnedOffset[column.property]\n      });\n    }));\n  }));\n});"]},"metadata":{},"sourceType":"module"}