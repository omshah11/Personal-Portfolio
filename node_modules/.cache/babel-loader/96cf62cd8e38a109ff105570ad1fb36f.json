{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport { genericProps } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    autoPlay: PropTypes.bool,\n    controls: PropTypes.oneOfType([PropTypes.oneOf([false, 'over', 'below']), PropTypes.shape({\n      position: PropTypes.oneOf[(false, 'over', 'below')],\n      items: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        icon: PropTypes.element,\n        a11yTitle: PropTypes.string,\n        onClick: PropTypes.func\n      })]))\n    })]),\n    fit: PropTypes.oneOf(['cover', 'contain']),\n    loop: PropTypes.bool,\n    mute: PropTypes.bool,\n    messages: PropTypes.shape({\n      closeMenu: PropTypes.string,\n      fullScreen: PropTypes.string,\n      progressMeter: PropTypes.string,\n      openMenu: PropTypes.string,\n      pauseButton: PropTypes.string,\n      playButton: PropTypes.string,\n      scrubber: PropTypes.string,\n      volumeDown: PropTypes.string,\n      volumeUp: PropTypes.string\n    })\n  });\n}\n\nexport var VideoPropTypes = PropType;","map":{"version":3,"sources":["C:/Personal-Portfolio/node_modules/grommet/es6/components/Video/propTypes.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","PropTypes","genericProps","PropType","process","env","NODE_ENV","autoPlay","bool","controls","oneOfType","oneOf","shape","position","items","arrayOf","string","icon","element","a11yTitle","onClick","func","fit","loop","mute","messages","closeMenu","fullScreen","progressMeter","openMenu","pauseButton","playButton","scrubber","volumeDown","volumeUp","VideoPropTypes"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGf,QAAQ,CAAC,EAAD,EAAKc,YAAL,EAAmB;AACpCK,IAAAA,QAAQ,EAAEN,SAAS,CAACO,IADgB;AAEpCC,IAAAA,QAAQ,EAAER,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACU,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,CAAhB,CAAD,EAA4CV,SAAS,CAACW,KAAV,CAAgB;AACxFC,MAAAA,QAAQ,EAAEZ,SAAS,CAACU,KAAV,EAAiB,OAAO,MAAP,EAAe,OAAhC,EAD8E;AAExFG,MAAAA,KAAK,EAAEb,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACe,MAAX,EAAmBf,SAAS,CAACW,KAAV,CAAgB;AAC9EK,QAAAA,IAAI,EAAEhB,SAAS,CAACiB,OAD8D;AAE9EC,QAAAA,SAAS,EAAElB,SAAS,CAACe,MAFyD;AAG9EI,QAAAA,OAAO,EAAEnB,SAAS,CAACoB;AAH2D,OAAhB,CAAnB,CAApB,CAAlB;AAFiF,KAAhB,CAA5C,CAApB,CAF0B;AAUpCC,IAAAA,GAAG,EAAErB,SAAS,CAACU,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,CAAhB,CAV+B;AAWpCY,IAAAA,IAAI,EAAEtB,SAAS,CAACO,IAXoB;AAYpCgB,IAAAA,IAAI,EAAEvB,SAAS,CAACO,IAZoB;AAapCiB,IAAAA,QAAQ,EAAExB,SAAS,CAACW,KAAV,CAAgB;AACxBc,MAAAA,SAAS,EAAEzB,SAAS,CAACe,MADG;AAExBW,MAAAA,UAAU,EAAE1B,SAAS,CAACe,MAFE;AAGxBY,MAAAA,aAAa,EAAE3B,SAAS,CAACe,MAHD;AAIxBa,MAAAA,QAAQ,EAAE5B,SAAS,CAACe,MAJI;AAKxBc,MAAAA,WAAW,EAAE7B,SAAS,CAACe,MALC;AAMxBe,MAAAA,UAAU,EAAE9B,SAAS,CAACe,MANE;AAOxBgB,MAAAA,QAAQ,EAAE/B,SAAS,CAACe,MAPI;AAQxBiB,MAAAA,UAAU,EAAEhC,SAAS,CAACe,MARE;AASxBkB,MAAAA,QAAQ,EAAEjC,SAAS,CAACe;AATI,KAAhB;AAb0B,GAAnB,CAAnB;AAyBD;;AAED,OAAO,IAAImB,cAAc,GAAGhC,QAArB","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport PropTypes from 'prop-types';\nimport { genericProps } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    autoPlay: PropTypes.bool,\n    controls: PropTypes.oneOfType([PropTypes.oneOf([false, 'over', 'below']), PropTypes.shape({\n      position: PropTypes.oneOf[(false, 'over', 'below')],\n      items: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        icon: PropTypes.element,\n        a11yTitle: PropTypes.string,\n        onClick: PropTypes.func\n      })]))\n    })]),\n    fit: PropTypes.oneOf(['cover', 'contain']),\n    loop: PropTypes.bool,\n    mute: PropTypes.bool,\n    messages: PropTypes.shape({\n      closeMenu: PropTypes.string,\n      fullScreen: PropTypes.string,\n      progressMeter: PropTypes.string,\n      openMenu: PropTypes.string,\n      pauseButton: PropTypes.string,\n      playButton: PropTypes.string,\n      scrubber: PropTypes.string,\n      volumeDown: PropTypes.string,\n      volumeUp: PropTypes.string\n    })\n  });\n}\n\nexport var VideoPropTypes = PropType;"]},"metadata":{},"sourceType":"module"}