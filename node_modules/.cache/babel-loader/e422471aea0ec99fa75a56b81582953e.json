{"ast":null,"code":"var _excluded = [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"offset\", \"pad\", \"series\", \"size\"],\n    _excluded2 = [\"property\", \"type\", \"x\", \"y\"],\n    _excluded3 = [\"property\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useContext, useMemo, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { parseMetricToNum } from '../../utils';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, points } from './utils';\nimport { DataChartPropTypes } from './propTypes';\nvar stackedChartType = {\n  areas: 'area',\n  bars: 'bar',\n  lines: 'line'\n}; // DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      _ref$axis = _ref.axis,\n      axisProp = _ref$axis === void 0 ? true : _ref$axis,\n      _ref$bounds = _ref.bounds,\n      boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n      chart = _ref.chart,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      detail = _ref.detail,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n      guideProp = _ref.guide,\n      legend = _ref.legend,\n      offset = _ref.offset,\n      padProp = _ref.pad,\n      seriesProp = _ref.series,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme; // legend interaction, if any\n\n  var _useState = useState(),\n      activeProperty = _useState[0],\n      setActiveProperty = _useState[1]; // refs used for ie11 not having Grid\n\n\n  var xRef = useRef();\n  var spacerRef = useRef(); // normalize seriesProp to an array of objects, one per property\n\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  }; // Normalize chart to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar or area chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n\n\n  var charts = useMemo(function () {\n    if (!chart) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      }); // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n\n    if (Array.isArray(chart)) return chart.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chart === 'string') return [{\n      property: chart\n    }];\n    if (chart) return [chart];\n    return [];\n  }, [chart, series]); // map the series property values into their own arrays\n\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]); // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n          property = _ref5.property,\n          type = _ref5.type;\n\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar or area chart has multiple\n          // properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (stackedChartType[type]) {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                if (type === 'lines') return [i, base + v];\n                return [i, base, base + v];\n              });\n            });\n          }\n\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n              thickness = property.thickness,\n              x = property.x,\n              y = property.y,\n              y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n\n        return seriesValues[property];\n      }\n\n      return undefined;\n    });\n  }, [charts, data, seriesValues]); // map granularities to work well with the number of data points we have\n\n  var granularities = useMemo(function () {\n    var medium; // determine a good medium granularity that will align well with the\n    // length of the data\n\n    var steps = data.length - 1; // special case property driven point charts\n\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    return {\n      x: {\n        coarse: 2,\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [charts, data.length, size]); // normalize axis to objects, convert granularity to a number\n\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n\n    if (result.y) {\n      if (!result.y.property && charts[0]) // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    } // calculate number of entries based on granularity\n\n\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n          granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n          _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n\n      result.y.count = granularities.y[_granularity];\n    }\n\n    return result;\n  }, [axisProp, data, charts, granularities]); // calculate axis, bounds, and thickness for each chart\n\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n          granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n          _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n\n    var chartBounds = chartValues.map(function (_, index) {\n      var type = charts[index].type;\n\n      if (stackedChartType[type]) {\n        var _chartValues$index, _chartValues$index$; // merge values for bars, areas, and lines cases\n\n\n        var mergedValues = ((_chartValues$index = chartValues[index]) == null ? void 0 : (_chartValues$index$ = _chartValues$index[0]) == null ? void 0 : _chartValues$index$.slice(0)) || [];\n        chartValues[index].slice(1) // skip first index as that is the x value\n        .filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return type === 'lines' ? [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][1], values[i][1])] : [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      } // if this is a data driven x chart, set coarseness for x\n\n\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n\n    return chartValues.map(function (values, index) {\n      var _charts$index = charts[index],\n          thickness = _charts$index.thickness,\n          type = _charts$index.type;\n      var calcValues = stackedChartType[type] ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps,\n        thickness: thickness\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]); // normalize how we style data properties for use by Legend and Detail\n\n  var seriesStyles = useMemo(function () {\n    var result = {}; // start from what we were explicitly given\n\n    charts.forEach(function (_ref6, index) {\n      var color = _ref6.color,\n          point = _ref6.point,\n          property = _ref6.property,\n          thickness = _ref6.thickness,\n          type = _ref6.type;\n      var calcThickness = chartProps[index].thickness;\n\n      if (typeof property === 'object' && !Array.isArray(property)) {\n        // data driven point chart\n        Object.keys(property).forEach(function (aspect) {\n          var prop = property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var props = Array.isArray(property) ? property : [property];\n        props.forEach(function (prop) {\n          var p = prop.property || prop;\n          var pColor = prop.color || color;\n          if (!result[p]) result[p] = {};\n          if (pColor && !result[p].color) result[p].color = pColor;\n          if (point && !result[p].point) result[p].point = point;else if (type === 'point') result[p].point = false;\n          if ((thickness || calcThickness) && !result[p].thickness) result[p].thickness = thickness || calcThickness;\n        });\n      }\n    }); // set color for any non-aspect properties we don't have one for yet\n\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      } // set opacity if it isn't set and this isn't the active property\n\n\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]); // normalize guide\n\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    } // set counts\n\n\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n\n    return result;\n  }, [axis, granularities, guideProp]); // set the pad to half the thickness, based on the chart types\n  // except when using offset, then add even more horizontal pad\n\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = halfPad[thickness];\n      if (type && type !== 'bar') result.vertical = halfPad[thickness];\n    });\n    return result;\n  }, [chartProps, charts, padProp]); // calculate the thickness in pixels of each chart\n\n  var thicknesses = useMemo(function () {\n    return offset ? charts.map(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n    }) : undefined;\n  }, [charts, chartProps, offset, theme]); // calculate the offset for each chart, which is a sum of the thicknesses\n  // that preceded it\n\n  var offsets = useMemo(function () {\n    return offset ? thicknesses.map(function (t, i) {\n      return thicknesses.slice(0, i).reduce(function (a, b) {\n        return a + b;\n      }, 0);\n    }) : undefined;\n  }, [offset, thicknesses]); // Calculate the total pad we should add to the end of each chart.\n  // We do this to shrink the width of each chart so we can shift them\n  // via `translate` and have them take up the right amount of width.\n\n  var offsetPad = useMemo(function () {\n    return offset ? thicknesses.reduce(function (a, b) {\n      return a + b;\n    }, 0) + \"px\" : undefined;\n  }, [offset, thicknesses]); // The thickness of the Detail segments. We need to convert to numbers\n  // to be able to compare across charts where some might be using T-shirt\n  // labels and others might be pixel values.\n\n  var detailThickness = useMemo(function () {\n    var result = 0;\n\n    if (detail) {\n      charts.forEach(function (_, index) {\n        var thickness = chartProps[index].thickness;\n        result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));\n      });\n    }\n\n    return result + \"px\";\n  }, [charts, chartProps, detail, theme]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n          render = _ref8.render;\n\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]); // for ie11, align the spacer Box height to the x-axis height\n\n  useLayoutEffect(function () {\n    if (xRef.current && spacerRef.current) {\n      var rect = xRef.current.getBoundingClientRect();\n      spacerRef.current.style.height = rect.height + \"px\";\n    }\n  }, []);\n\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n\n    return value;\n  }; // TODO: revisit how x/y axis are hooked up to charts and series\n\n\n  var xAxisElement = axis && axis.x && chartProps.length ? /*#__PURE__*/React.createElement(XAxis, {\n    ref: xRef,\n    axis: axis,\n    chartProps: chartProps,\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property)\n  }) : null;\n  var yAxisElement = axis && axis.y && chartProps.length ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    chartProps: chartProps,\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n        type = _ref9.type,\n        x = _ref9.x,\n        y = _ref9.y,\n        chartRest = _objectWithoutPropertiesLoose(_ref9, _excluded2); // When we offset, we increase the padding on the end for all charts\n    // by the same amount and we shift each successive chart to the\n    // right by an offset for that chart. The last chart's right side\n    // will end up aligning with where the charts would have been\n    // had we not padded their ends.\n\n\n    var chartPad = offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad;\n    var offsetProps = offsetPad ? {\n      style: {\n        transform: \"translate(\" + offsets[i] + \"px, 0px)\"\n      }\n    } : {};\n\n    if (stackedChartType[type]) {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n\n        var _ref10 = typeof cProp === 'object' ? cProp : {},\n            property = _ref10.property,\n            propRest = _objectWithoutPropertiesLoose(_ref10, _excluded3);\n\n        return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j // when property name isn't valid, send empty array\n          ,\n          values: chartValues[i][j] || [],\n          overflow: true\n        }, seriesStyles[pProp], chartProps[i], chartRest, propRest, offsetProps, {\n          type: stackedChartType[type] || type,\n          size: size,\n          pad: chartPad\n        }));\n      }).reverse();\n    }\n\n    return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, offsetProps, {\n      type: type,\n      size: size,\n      pad: chartPad\n    }));\n  }), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    pad: pad,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    thickness: detailThickness\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null; // IE11\n\n  if (!Grid.available) {\n    var _content = stackElement;\n\n    if (xAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, xAxisElement);\n    }\n\n    if (yAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, {\n        direction: \"row\"\n      }, /*#__PURE__*/React.createElement(Box, null, yAxisElement, /*#__PURE__*/React.createElement(Box, {\n        ref: spacerRef,\n        flex: false\n      })), _content);\n    }\n\n    if (legendElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, legendElement);\n    }\n\n    return _content;\n  }\n\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n\n  return content;\n});\nDataChart.displayName = 'DataChart';\nDataChart.propTypes = DataChartPropTypes;\nexport { DataChart };","map":{"version":3,"sources":["C:/Personal-Portfolio/node_modules/grommet/es6/components/DataChart/DataChart.js"],"names":["_excluded","_excluded2","_excluded3","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useContext","useMemo","useRef","useState","ThemeContext","useLayoutEffect","Box","Chart","calcs","calcBounds","Grid","Stack","parseMetricToNum","Detail","Legend","XAxis","YAxis","XGuide","YGuide","createDateFormat","halfPad","heightYGranularity","points","DataChartPropTypes","stackedChartType","areas","bars","lines","DataChart","_ref","ref","a11yTitle","_ref$axis","axis","axisProp","_ref$bounds","bounds","boundsProp","chart","_ref$data","data","detail","_ref$gap","gap","guideProp","guide","legend","offset","padProp","pad","seriesProp","series","size","rest","theme","defaultProps","_useState","activeProperty","setActiveProperty","xRef","spacerRef","Array","isArray","filter","s","property","map","getPropertySeries","prop","find","_ref2","charts","slice","c","_ref3","seriesValues","result","forEach","_ref4","d","chartValues","_ref5","opacity","type","totals","cp","aProperty","values","undefined","v","base","_","index","concat","p","color","thickness","x","y","y2","value","aValue","push","t","transform","granularities","medium","steps","coarse","fine","height","date","time","granularity","_result$x$granularity","count","_result$y$granularity","_granularity","chartProps","coarseness","_axis$x$granularity","_axis$y$granularity","_granularity2","chartBounds","_chartValues$index","_chartValues$index$","mergedValues","__","Math","min","max","alignedBounds","_charts$index","calcValues","seriesStyles","_ref6","point","calcThickness","aspect","props","pColor","colorIndex","pointIndex","seriesStyle","_ref7","horizontal","vertical","thicknesses","global","edgeSize","offsets","reduce","a","b","offsetPad","detailThickness","dateFormats","full","_ref8","render","current","rect","getBoundingClientRect","style","renderValue","serie","dataIndex","valueArg","datum","dateFormat","Date","prefix","suffix","xAxisElement","createElement","yAxisElement","stackFill","width","guidingChild","stackElement","gridArea","fill","_ref9","chartRest","chartPad","end","offsetProps","cProp","j","pProp","_ref10","propRest","overflow","reverse","legendElement","available","_content","direction","flex","content","columns","rows","name","start","align","displayName","propTypes"],"mappings":"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","sourcesContent":["var _excluded = [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"gap\", \"guide\", \"legend\", \"offset\", \"pad\", \"series\", \"size\"],\n    _excluded2 = [\"property\", \"type\", \"x\", \"y\"],\n    _excluded3 = [\"property\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useContext, useMemo, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { useLayoutEffect } from '../../utils/use-isomorphic-layout-effect';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { parseMetricToNum } from '../../utils';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, points } from './utils';\nimport { DataChartPropTypes } from './propTypes';\nvar stackedChartType = {\n  areas: 'area',\n  bars: 'bar',\n  lines: 'line'\n}; // DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      _ref$axis = _ref.axis,\n      axisProp = _ref$axis === void 0 ? true : _ref$axis,\n      _ref$bounds = _ref.bounds,\n      boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n      chart = _ref.chart,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      detail = _ref.detail,\n      _ref$gap = _ref.gap,\n      gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n      guideProp = _ref.guide,\n      legend = _ref.legend,\n      offset = _ref.offset,\n      padProp = _ref.pad,\n      seriesProp = _ref.series,\n      size = _ref.size,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme; // legend interaction, if any\n\n  var _useState = useState(),\n      activeProperty = _useState[0],\n      setActiveProperty = _useState[1]; // refs used for ie11 not having Grid\n\n\n  var xRef = useRef();\n  var spacerRef = useRef(); // normalize seriesProp to an array of objects, one per property\n\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  }; // Normalize chart to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar or area chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n\n\n  var charts = useMemo(function () {\n    if (!chart) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      }); // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n\n    if (Array.isArray(chart)) return chart.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chart === 'string') return [{\n      property: chart\n    }];\n    if (chart) return [chart];\n    return [];\n  }, [chart, series]); // map the series property values into their own arrays\n\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]); // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n          property = _ref5.property,\n          type = _ref5.type;\n\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar or area chart has multiple\n          // properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (stackedChartType[type]) {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                if (type === 'lines') return [i, base + v];\n                return [i, base, base + v];\n              });\n            });\n          }\n\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n              thickness = property.thickness,\n              x = property.x,\n              y = property.y,\n              y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n\n        return seriesValues[property];\n      }\n\n      return undefined;\n    });\n  }, [charts, data, seriesValues]); // map granularities to work well with the number of data points we have\n\n  var granularities = useMemo(function () {\n    var medium; // determine a good medium granularity that will align well with the\n    // length of the data\n\n    var steps = data.length - 1; // special case property driven point charts\n\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    return {\n      x: {\n        coarse: 2,\n        fine: data.length,\n        medium: medium\n      },\n      y: _extends({}, heightYGranularity[size && size.height || 'small'] || {\n        fine: 5,\n        medium: 3\n      }, {\n        coarse: 2\n      })\n    };\n  }, [charts, data.length, size]); // normalize axis to objects, convert granularity to a number\n\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n\n    if (result.y) {\n      if (!result.y.property && charts[0]) // see if we have a point chart that has an x property\n        result.y.property = charts[0].property.y || charts[0].property;\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    } // calculate number of entries based on granularity\n\n\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n          granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n          _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n\n      result.y.count = granularities.y[_granularity];\n    }\n\n    return result;\n  }, [axisProp, data, charts, granularities]); // calculate axis, bounds, and thickness for each chart\n\n  var chartProps = useMemo(function () {\n    var steps = [];\n    var coarseness = [undefined, 5];\n\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n          granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps[0] = granularities.x[granularity] - 1;\n    } else steps[0] = data.length - 1;\n\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n          _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n\n      steps[1] = granularities.y[_granularity2] - 1;\n    } else steps[1] = 1;\n\n    var chartBounds = chartValues.map(function (_, index) {\n      var type = charts[index].type;\n\n      if (stackedChartType[type]) {\n        var _chartValues$index, _chartValues$index$;\n\n        // merge values for bars, areas, and lines cases\n        var mergedValues = ((_chartValues$index = chartValues[index]) == null ? void 0 : (_chartValues$index$ = _chartValues$index[0]) == null ? void 0 : _chartValues$index$.slice(0)) || [];\n        chartValues[index].slice(1) // skip first index as that is the x value\n        .filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return type === 'lines' ? [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][1], values[i][1])] : [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          steps: steps\n        });\n      } // if this is a data driven x chart, set coarseness for x\n\n\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? [5, 5] : coarseness,\n        steps: steps\n      });\n    });\n\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = [].concat(chartBounds[0]);\n      chartBounds.forEach(function (bounds) {\n        alignedBounds[0][0] = Math.min(alignedBounds[0][0], bounds[0][0]);\n        alignedBounds[0][1] = Math.max(alignedBounds[0][1], bounds[0][1]);\n        alignedBounds[1][0] = Math.min(alignedBounds[1][0], bounds[1][0]);\n        alignedBounds[1][1] = Math.max(alignedBounds[1][1], bounds[1][1]);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n\n    return chartValues.map(function (values, index) {\n      var _charts$index = charts[index],\n          thickness = _charts$index.thickness,\n          type = _charts$index.type;\n      var calcValues = stackedChartType[type] ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        steps: steps,\n        thickness: thickness\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, granularities]); // normalize how we style data properties for use by Legend and Detail\n\n  var seriesStyles = useMemo(function () {\n    var result = {}; // start from what we were explicitly given\n\n    charts.forEach(function (_ref6, index) {\n      var color = _ref6.color,\n          point = _ref6.point,\n          property = _ref6.property,\n          thickness = _ref6.thickness,\n          type = _ref6.type;\n      var calcThickness = chartProps[index].thickness;\n\n      if (typeof property === 'object' && !Array.isArray(property)) {\n        // data driven point chart\n        Object.keys(property).forEach(function (aspect) {\n          var prop = property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var props = Array.isArray(property) ? property : [property];\n        props.forEach(function (prop) {\n          var p = prop.property || prop;\n          var pColor = prop.color || color;\n          if (!result[p]) result[p] = {};\n          if (pColor && !result[p].color) result[p].color = pColor;\n          if (point && !result[p].point) result[p].point = point;else if (type === 'point') result[p].point = false;\n          if ((thickness || calcThickness) && !result[p].thickness) result[p].thickness = thickness || calcThickness;\n        });\n      }\n    }); // set color for any non-aspect properties we don't have one for yet\n\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      } // set opacity if it isn't set and this isn't the active property\n\n\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]); // normalize guide\n\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    } // set counts\n\n\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n\n    return result;\n  }, [axis, granularities, guideProp]); // set the pad to half the thickness, based on the chart types\n  // except when using offset, then add even more horizontal pad\n\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var result = {};\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      result.horizontal = halfPad[thickness];\n      if (type && type !== 'bar') result.vertical = halfPad[thickness];\n    });\n    return result;\n  }, [chartProps, charts, padProp]); // calculate the thickness in pixels of each chart\n\n  var thicknesses = useMemo(function () {\n    return offset ? charts.map(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n    }) : undefined;\n  }, [charts, chartProps, offset, theme]); // calculate the offset for each chart, which is a sum of the thicknesses\n  // that preceded it\n\n  var offsets = useMemo(function () {\n    return offset ? thicknesses.map(function (t, i) {\n      return thicknesses.slice(0, i).reduce(function (a, b) {\n        return a + b;\n      }, 0);\n    }) : undefined;\n  }, [offset, thicknesses]); // Calculate the total pad we should add to the end of each chart.\n  // We do this to shrink the width of each chart so we can shift them\n  // via `translate` and have them take up the right amount of width.\n\n  var offsetPad = useMemo(function () {\n    return offset ? thicknesses.reduce(function (a, b) {\n      return a + b;\n    }, 0) + \"px\" : undefined;\n  }, [offset, thicknesses]); // The thickness of the Detail segments. We need to convert to numbers\n  // to be able to compare across charts where some might be using T-shirt\n  // labels and others might be pixel values.\n\n  var detailThickness = useMemo(function () {\n    var result = 0;\n\n    if (detail) {\n      charts.forEach(function (_, index) {\n        var thickness = chartProps[index].thickness;\n        result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));\n      });\n    }\n\n    return result + \"px\";\n  }, [charts, chartProps, detail, theme]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n          render = _ref8.render;\n\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]); // for ie11, align the spacer Box height to the x-axis height\n\n  useLayoutEffect(function () {\n    if (xRef.current && spacerRef.current) {\n      var rect = xRef.current.getBoundingClientRect();\n      spacerRef.current.style.height = rect.height + \"px\";\n    }\n  }, []);\n\n  var renderValue = function renderValue(serie, dataIndex, valueArg) {\n    var value;\n\n    if (valueArg !== undefined) {\n      if (serie && serie.render) return serie.render(valueArg);\n      value = valueArg;\n    } else {\n      var datum = data[dataIndex];\n      value = datum[serie.property];\n      if (serie && serie.render) return serie.render(value, datum, serie.property);\n    }\n\n    if (serie) {\n      var dateFormat = dateFormats[serie.property];\n      if (dateFormat) return dateFormat(new Date(value));\n      if (serie.prefix) value = \"\" + serie.prefix + value;\n      if (serie.suffix) value = \"\" + value + serie.suffix;\n    }\n\n    return value;\n  }; // TODO: revisit how x/y axis are hooked up to charts and series\n\n\n  var xAxisElement = axis && axis.x && chartProps.length ? /*#__PURE__*/React.createElement(XAxis, {\n    ref: xRef,\n    axis: axis,\n    chartProps: chartProps,\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property)\n  }) : null;\n  var yAxisElement = axis && axis.y && chartProps.length ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    chartProps: chartProps,\n    pad: pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property)\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n        type = _ref9.type,\n        x = _ref9.x,\n        y = _ref9.y,\n        chartRest = _objectWithoutPropertiesLoose(_ref9, _excluded2);\n\n    // When we offset, we increase the padding on the end for all charts\n    // by the same amount and we shift each successive chart to the\n    // right by an offset for that chart. The last chart's right side\n    // will end up aligning with where the charts would have been\n    // had we not padded their ends.\n    var chartPad = offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad;\n    var offsetProps = offsetPad ? {\n      style: {\n        transform: \"translate(\" + offsets[i] + \"px, 0px)\"\n      }\n    } : {};\n\n    if (stackedChartType[type]) {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n\n        var _ref10 = typeof cProp === 'object' ? cProp : {},\n            property = _ref10.property,\n            propRest = _objectWithoutPropertiesLoose(_ref10, _excluded3);\n\n        return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j // when property name isn't valid, send empty array\n          ,\n          values: chartValues[i][j] || [],\n          overflow: true\n        }, seriesStyles[pProp], chartProps[i], chartRest, propRest, offsetProps, {\n          type: stackedChartType[type] || type,\n          size: size,\n          pad: chartPad\n        }));\n      }).reverse();\n    }\n\n    return /*#__PURE__*/React.createElement(Chart // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true\n    }, seriesStyles[prop], chartProps[i], chartRest, offsetProps, {\n      type: type,\n      size: size,\n      pad: chartPad\n    }));\n  }), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    pad: pad,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    thickness: detailThickness\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null; // IE11\n\n  if (!Grid.available) {\n    var _content = stackElement;\n\n    if (xAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, xAxisElement);\n    }\n\n    if (yAxisElement) {\n      _content = /*#__PURE__*/React.createElement(Box, {\n        direction: \"row\"\n      }, /*#__PURE__*/React.createElement(Box, null, yAxisElement, /*#__PURE__*/React.createElement(Box, {\n        ref: spacerRef,\n        flex: false\n      })), _content);\n    }\n\n    if (legendElement) {\n      _content = /*#__PURE__*/React.createElement(Box, null, _content, legendElement);\n    }\n\n    return _content;\n  }\n\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n\n  return content;\n});\nDataChart.displayName = 'DataChart';\nDataChart.propTypes = DataChartPropTypes;\nexport { DataChart };"]},"metadata":{},"sourceType":"module"}