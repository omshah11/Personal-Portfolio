{"ast":null,"code":"var _excluded = [\"buttonProps\", \"calendarProps\", \"defaultValue\", \"disabled\", \"dropProps\", \"format\", \"id\", \"icon\", \"inline\", \"inputProps\", \"name\", \"onChange\", \"onFocus\", \"plain\", \"value\", \"messages\"],\n    _excluded2 = [\"icon\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useRef, forwardRef, useContext, useEffect, useMemo, useState, useCallback } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Calendar as CalendarIcon } from 'grommet-icons/icons/Calendar';\nimport { defaultProps } from '../../default-props';\nimport { AnnounceContext } from '../../contexts/AnnounceContext';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Calendar } from '../Calendar';\nimport { Drop } from '../Drop';\nimport { DropButton } from '../DropButton';\nimport { FormContext } from '../Form';\nimport { Keyboard } from '../Keyboard';\nimport { MaskedInput } from '../MaskedInput';\nimport { useForwardedRef } from '../../utils';\nimport { getTimestamp, normalizeForTimezone } from '../Calendar/utils';\nimport { formatToSchema, schemaToMask, valuesAreEqual, valueToText, textToValue } from './utils';\nimport { DateInputPropTypes } from './propTypes';\nvar DateInput = /*#__PURE__*/forwardRef(function (_ref, refArg) {\n  var buttonProps = _ref.buttonProps,\n      calendarProps = _ref.calendarProps,\n      defaultValue = _ref.defaultValue,\n      disabled = _ref.disabled,\n      dropProps = _ref.dropProps,\n      format = _ref.format,\n      id = _ref.id,\n      icon = _ref.icon,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      inputProps = _ref.inputProps,\n      name = _ref.name,\n      _onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      plain = _ref.plain,\n      valueArg = _ref.value,\n      messages = _ref.messages,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var announce = useContext(AnnounceContext);\n\n  var _useContext = useContext(MessageContext),\n      formatMessage = _useContext.format;\n\n  var iconSize = theme.dateInput.icon && theme.dateInput.icon.size || 'medium';\n\n  var _useContext2 = useContext(FormContext),\n      useFormInput = _useContext2.useFormInput;\n\n  var ref = useForwardedRef(refArg);\n  var containerRef = useRef();\n\n  var _useFormInput = useFormInput({\n    name: name,\n    value: valueArg,\n    initialValue: defaultValue\n  }),\n      value = _useFormInput[0],\n      setValue = _useFormInput[1];\n\n  var timestamp;\n\n  if (Array.isArray(defaultValue) && defaultValue.length) {\n    timestamp = getTimestamp(defaultValue[0]);\n  } else if (typeof defaultValue === 'string') {\n    timestamp = getTimestamp(defaultValue);\n  } else if (Array.isArray(value) && value.length) {\n    timestamp = getTimestamp(value[0]); // check to see if value is not an empty string\n    // empty string should behave like undefined\n  } else if (typeof value === 'string' && value.length) {\n    timestamp = getTimestamp(value);\n  } // normalize value based on timestamp vs user's local timezone\n\n\n  var normalizedDate = normalizeForTimezone(value, timestamp); // do we expect multiple dates?\n\n  var range = Array.isArray(value) || format && format.includes('-'); // parse format and build a formal schema we can use elsewhere\n\n  var schema = useMemo(function () {\n    return formatToSchema(format);\n  }, [format]); // mask is only used when a format is provided\n\n  var mask = useMemo(function () {\n    return schemaToMask(schema);\n  }, [schema]); // textValue is only used when a format is provided\n\n  var _useState = useState(schema ? valueToText(normalizedDate, schema) : undefined),\n      textValue = _useState[0],\n      setTextValue = _useState[1]; // Setting the icon through `inputProps` is deprecated.\n  // The `icon` prop should be used instead.\n\n\n  var _ref2 = inputProps || {},\n      MaskedInputIcon = _ref2.icon,\n      restOfInputProps = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  if (MaskedInputIcon) {\n    console.warn(\"Customizing the DateInput icon through inputProps is deprecated. \\nUse the icon prop instead.\");\n  } // We need to distinguish between the caller changing a Form value\n  // and the user typing a date that he isn't finished with yet.\n  // To handle this, we see if we have a value and the text value\n  // associated with it doesn't align to it, then we update the text value.\n  // We compare using textToValue to avoid \"06/01/2021\" not\n  // matching \"06/1/2021\".\n\n\n  useEffect(function () {\n    if (schema && value !== undefined) {\n      var nextTextValue = valueToText(normalizedDate, schema);\n\n      if (!valuesAreEqual(textToValue(textValue, schema, range, timestamp), textToValue(nextTextValue, schema, range, timestamp)) || textValue === '' && nextTextValue !== '') {\n        setTextValue(nextTextValue);\n      }\n    }\n  }, [range, schema, textValue, value, normalizedDate, timestamp]); // when format and not inline, whether to show the Calendar in a Drop\n\n  var _useState2 = useState(),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var openCalendar = useCallback(function () {\n    setOpen(true);\n    announce(formatMessage({\n      id: 'dateInput.enterCalendar',\n      messages: messages\n    }));\n  }, [announce, formatMessage, messages]);\n  var closeCalendar = useCallback(function () {\n    setOpen(false);\n    announce(formatMessage({\n      id: 'dateInput.exitCalendar',\n      messages: messages\n    }));\n  }, [announce, formatMessage, messages]);\n  var calendar = /*#__PURE__*/React.createElement(Calendar, _extends({\n    ref: inline ? ref : undefined,\n    id: inline && !format ? id : undefined,\n    range: range,\n    date: range ? undefined : normalizedDate // when caller initializes with empty array, dates should be undefined\n    // allowing the user to select both begin and end of the range\n    ,\n    dates: range && value.length ? [normalizedDate] : undefined // places focus on days grid when Calendar opens\n    ,\n    initialFocus: open ? 'days' : undefined,\n    onSelect: disabled ? undefined : function (nextValue) {\n      var normalizedValue;\n\n      if (range && Array.isArray(nextValue)) {\n        normalizedValue = nextValue[0];\n      } // clicking an edge date removes it\n      else if (range) normalizedValue = [nextValue, nextValue];else normalizedValue = nextValue;\n\n      if (schema) setTextValue(valueToText(normalizeForTimezone(normalizedValue), schema));\n      setValue(normalizedValue);\n      if (_onChange) _onChange({\n        value: normalizedValue\n      });\n\n      if (open && !range) {\n        closeCalendar();\n        setTimeout(function () {\n          return ref.current.focus();\n        }, 1);\n      }\n    }\n  }, _extends({}, calendarProps, {\n    timestamp: timestamp\n  })));\n  var formContextValue = useMemo(function () {\n    return {\n      useFormInput: function useFormInput(_ref3) {\n        var valueProp = _ref3.value;\n        return [valueProp, function () {}];\n      }\n    };\n  }, []);\n\n  if (!format) {\n    // When no format is specified, we don't give the user a way to type\n    if (inline) return calendar;\n    return /*#__PURE__*/React.createElement(DropButton, _extends({\n      ref: ref,\n      id: id,\n      dropProps: _extends({\n        align: {\n          top: 'bottom',\n          left: 'left'\n        }\n      }, dropProps),\n      dropContent: calendar,\n      icon: icon || MaskedInputIcon || /*#__PURE__*/React.createElement(CalendarIcon, {\n        size: iconSize\n      })\n    }, buttonProps));\n  }\n\n  var input = /*#__PURE__*/React.createElement(FormContext.Provider, {\n    key: \"input\" // don't let MaskedInput drive the Form\n    ,\n    value: formContextValue\n  }, /*#__PURE__*/React.createElement(Keyboard, {\n    onEsc: open ? function () {\n      return closeCalendar();\n    } : undefined,\n    onSpace: openCalendar\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: containerRef,\n    border: !plain,\n    round: \"xxsmall\",\n    direction: \"row\",\n    fill: true\n  }, /*#__PURE__*/React.createElement(MaskedInput, _extends({\n    ref: ref,\n    id: id,\n    name: name,\n    reverse: true,\n    disabled: disabled,\n    mask: mask,\n    plain: true\n  }, restOfInputProps, rest, {\n    value: textValue,\n    onChange: function onChange(event) {\n      var nextTextValue = event.target.value;\n      setTextValue(nextTextValue);\n      var nextValue = textToValue(nextTextValue, schema, range, timestamp); // update value even when undefined\n\n      setValue(nextValue);\n\n      if (_onChange) {\n        event.persist(); // extract from React synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = nextValue;\n\n        _onChange(adjustedEvent);\n      }\n    },\n    onFocus: function onFocus(event) {\n      announce(formatMessage({\n        id: 'dateInput.openCalendar',\n        messages: messages\n      }));\n      if (_onFocus) _onFocus(event);\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: open ? closeCalendar : openCalendar,\n    plain: true,\n    icon: icon || MaskedInputIcon || /*#__PURE__*/React.createElement(CalendarIcon, {\n      size: iconSize\n    }),\n    margin: {\n      right: 'small'\n    }\n  }))));\n\n  if (inline) {\n    return /*#__PURE__*/React.createElement(Box, null, input, calendar);\n  }\n\n  if (open) {\n    return [input, /*#__PURE__*/React.createElement(Keyboard, {\n      key: \"drop\",\n      onEsc: function onEsc() {\n        return ref.current.focus();\n      }\n    }, /*#__PURE__*/React.createElement(Drop, _extends({\n      overflow: \"visible\",\n      id: id ? id + \"__drop\" : undefined,\n      target: ref.current,\n      align: _extends({\n        top: 'bottom',\n        left: 'left'\n      }, dropProps),\n      onEsc: closeCalendar,\n      onClickOutside: function onClickOutside(_ref4) {\n        var target = _ref4.target;\n\n        if (target !== containerRef.current && !containerRef.current.contains(target)) {\n          closeCalendar();\n        }\n      }\n    }, dropProps), calendar))];\n  }\n\n  return input;\n});\nDateInput.displayName = 'DateInput';\nDateInput.propTypes = DateInputPropTypes;\nexport { DateInput };","map":{"version":3,"sources":["C:/Personal-Portfolio/node_modules/grommet/es6/components/DateInput/DateInput.js"],"names":["_excluded","_excluded2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","useRef","forwardRef","useContext","useEffect","useMemo","useState","useCallback","ThemeContext","Calendar","CalendarIcon","defaultProps","AnnounceContext","MessageContext","Box","Button","Drop","DropButton","FormContext","Keyboard","MaskedInput","useForwardedRef","getTimestamp","normalizeForTimezone","formatToSchema","schemaToMask","valuesAreEqual","valueToText","textToValue","DateInputPropTypes","DateInput","_ref","refArg","buttonProps","calendarProps","defaultValue","disabled","dropProps","format","id","icon","_ref$inline","inline","inputProps","name","_onChange","onChange","_onFocus","onFocus","plain","valueArg","value","messages","rest","theme","announce","_useContext","formatMessage","iconSize","dateInput","size","_useContext2","useFormInput","ref","containerRef","_useFormInput","initialValue","setValue","timestamp","Array","isArray","normalizedDate","range","includes","schema","mask","_useState","undefined","textValue","setTextValue","_ref2","MaskedInputIcon","restOfInputProps","console","warn","nextTextValue","_useState2","open","setOpen","openCalendar","closeCalendar","calendar","createElement","date","dates","initialFocus","onSelect","nextValue","normalizedValue","setTimeout","current","focus","formContextValue","_ref3","valueProp","align","top","left","dropContent","input","Provider","onEsc","onSpace","border","round","direction","fill","reverse","event","persist","adjustedEvent","onClick","margin","right","overflow","onClickOutside","_ref4","contains","displayName","propTypes"],"mappings":"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","sourcesContent":["var _excluded = [\"buttonProps\", \"calendarProps\", \"defaultValue\", \"disabled\", \"dropProps\", \"format\", \"id\", \"icon\", \"inline\", \"inputProps\", \"name\", \"onChange\", \"onFocus\", \"plain\", \"value\", \"messages\"],\n    _excluded2 = [\"icon\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, forwardRef, useContext, useEffect, useMemo, useState, useCallback } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Calendar as CalendarIcon } from 'grommet-icons/icons/Calendar';\nimport { defaultProps } from '../../default-props';\nimport { AnnounceContext } from '../../contexts/AnnounceContext';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Calendar } from '../Calendar';\nimport { Drop } from '../Drop';\nimport { DropButton } from '../DropButton';\nimport { FormContext } from '../Form';\nimport { Keyboard } from '../Keyboard';\nimport { MaskedInput } from '../MaskedInput';\nimport { useForwardedRef } from '../../utils';\nimport { getTimestamp, normalizeForTimezone } from '../Calendar/utils';\nimport { formatToSchema, schemaToMask, valuesAreEqual, valueToText, textToValue } from './utils';\nimport { DateInputPropTypes } from './propTypes';\nvar DateInput = /*#__PURE__*/forwardRef(function (_ref, refArg) {\n  var buttonProps = _ref.buttonProps,\n      calendarProps = _ref.calendarProps,\n      defaultValue = _ref.defaultValue,\n      disabled = _ref.disabled,\n      dropProps = _ref.dropProps,\n      format = _ref.format,\n      id = _ref.id,\n      icon = _ref.icon,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      inputProps = _ref.inputProps,\n      name = _ref.name,\n      _onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      plain = _ref.plain,\n      valueArg = _ref.value,\n      messages = _ref.messages,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var announce = useContext(AnnounceContext);\n\n  var _useContext = useContext(MessageContext),\n      formatMessage = _useContext.format;\n\n  var iconSize = theme.dateInput.icon && theme.dateInput.icon.size || 'medium';\n\n  var _useContext2 = useContext(FormContext),\n      useFormInput = _useContext2.useFormInput;\n\n  var ref = useForwardedRef(refArg);\n  var containerRef = useRef();\n\n  var _useFormInput = useFormInput({\n    name: name,\n    value: valueArg,\n    initialValue: defaultValue\n  }),\n      value = _useFormInput[0],\n      setValue = _useFormInput[1];\n\n  var timestamp;\n\n  if (Array.isArray(defaultValue) && defaultValue.length) {\n    timestamp = getTimestamp(defaultValue[0]);\n  } else if (typeof defaultValue === 'string') {\n    timestamp = getTimestamp(defaultValue);\n  } else if (Array.isArray(value) && value.length) {\n    timestamp = getTimestamp(value[0]); // check to see if value is not an empty string\n    // empty string should behave like undefined\n  } else if (typeof value === 'string' && value.length) {\n    timestamp = getTimestamp(value);\n  } // normalize value based on timestamp vs user's local timezone\n\n\n  var normalizedDate = normalizeForTimezone(value, timestamp); // do we expect multiple dates?\n\n  var range = Array.isArray(value) || format && format.includes('-'); // parse format and build a formal schema we can use elsewhere\n\n  var schema = useMemo(function () {\n    return formatToSchema(format);\n  }, [format]); // mask is only used when a format is provided\n\n  var mask = useMemo(function () {\n    return schemaToMask(schema);\n  }, [schema]); // textValue is only used when a format is provided\n\n  var _useState = useState(schema ? valueToText(normalizedDate, schema) : undefined),\n      textValue = _useState[0],\n      setTextValue = _useState[1]; // Setting the icon through `inputProps` is deprecated.\n  // The `icon` prop should be used instead.\n\n\n  var _ref2 = inputProps || {},\n      MaskedInputIcon = _ref2.icon,\n      restOfInputProps = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  if (MaskedInputIcon) {\n    console.warn(\"Customizing the DateInput icon through inputProps is deprecated. \\nUse the icon prop instead.\");\n  } // We need to distinguish between the caller changing a Form value\n  // and the user typing a date that he isn't finished with yet.\n  // To handle this, we see if we have a value and the text value\n  // associated with it doesn't align to it, then we update the text value.\n  // We compare using textToValue to avoid \"06/01/2021\" not\n  // matching \"06/1/2021\".\n\n\n  useEffect(function () {\n    if (schema && value !== undefined) {\n      var nextTextValue = valueToText(normalizedDate, schema);\n\n      if (!valuesAreEqual(textToValue(textValue, schema, range, timestamp), textToValue(nextTextValue, schema, range, timestamp)) || textValue === '' && nextTextValue !== '') {\n        setTextValue(nextTextValue);\n      }\n    }\n  }, [range, schema, textValue, value, normalizedDate, timestamp]); // when format and not inline, whether to show the Calendar in a Drop\n\n  var _useState2 = useState(),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var openCalendar = useCallback(function () {\n    setOpen(true);\n    announce(formatMessage({\n      id: 'dateInput.enterCalendar',\n      messages: messages\n    }));\n  }, [announce, formatMessage, messages]);\n  var closeCalendar = useCallback(function () {\n    setOpen(false);\n    announce(formatMessage({\n      id: 'dateInput.exitCalendar',\n      messages: messages\n    }));\n  }, [announce, formatMessage, messages]);\n  var calendar = /*#__PURE__*/React.createElement(Calendar, _extends({\n    ref: inline ? ref : undefined,\n    id: inline && !format ? id : undefined,\n    range: range,\n    date: range ? undefined : normalizedDate // when caller initializes with empty array, dates should be undefined\n    // allowing the user to select both begin and end of the range\n    ,\n    dates: range && value.length ? [normalizedDate] : undefined // places focus on days grid when Calendar opens\n    ,\n    initialFocus: open ? 'days' : undefined,\n    onSelect: disabled ? undefined : function (nextValue) {\n      var normalizedValue;\n\n      if (range && Array.isArray(nextValue)) {\n        normalizedValue = nextValue[0];\n      } // clicking an edge date removes it\n      else if (range) normalizedValue = [nextValue, nextValue];else normalizedValue = nextValue;\n\n      if (schema) setTextValue(valueToText(normalizeForTimezone(normalizedValue), schema));\n      setValue(normalizedValue);\n      if (_onChange) _onChange({\n        value: normalizedValue\n      });\n\n      if (open && !range) {\n        closeCalendar();\n        setTimeout(function () {\n          return ref.current.focus();\n        }, 1);\n      }\n    }\n  }, _extends({}, calendarProps, {\n    timestamp: timestamp\n  })));\n  var formContextValue = useMemo(function () {\n    return {\n      useFormInput: function useFormInput(_ref3) {\n        var valueProp = _ref3.value;\n        return [valueProp, function () {}];\n      }\n    };\n  }, []);\n\n  if (!format) {\n    // When no format is specified, we don't give the user a way to type\n    if (inline) return calendar;\n    return /*#__PURE__*/React.createElement(DropButton, _extends({\n      ref: ref,\n      id: id,\n      dropProps: _extends({\n        align: {\n          top: 'bottom',\n          left: 'left'\n        }\n      }, dropProps),\n      dropContent: calendar,\n      icon: icon || MaskedInputIcon || /*#__PURE__*/React.createElement(CalendarIcon, {\n        size: iconSize\n      })\n    }, buttonProps));\n  }\n\n  var input = /*#__PURE__*/React.createElement(FormContext.Provider, {\n    key: \"input\" // don't let MaskedInput drive the Form\n    ,\n    value: formContextValue\n  }, /*#__PURE__*/React.createElement(Keyboard, {\n    onEsc: open ? function () {\n      return closeCalendar();\n    } : undefined,\n    onSpace: openCalendar\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: containerRef,\n    border: !plain,\n    round: \"xxsmall\",\n    direction: \"row\",\n    fill: true\n  }, /*#__PURE__*/React.createElement(MaskedInput, _extends({\n    ref: ref,\n    id: id,\n    name: name,\n    reverse: true,\n    disabled: disabled,\n    mask: mask,\n    plain: true\n  }, restOfInputProps, rest, {\n    value: textValue,\n    onChange: function onChange(event) {\n      var nextTextValue = event.target.value;\n      setTextValue(nextTextValue);\n      var nextValue = textToValue(nextTextValue, schema, range, timestamp); // update value even when undefined\n\n      setValue(nextValue);\n\n      if (_onChange) {\n        event.persist(); // extract from React synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = nextValue;\n\n        _onChange(adjustedEvent);\n      }\n    },\n    onFocus: function onFocus(event) {\n      announce(formatMessage({\n        id: 'dateInput.openCalendar',\n        messages: messages\n      }));\n      if (_onFocus) _onFocus(event);\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: open ? closeCalendar : openCalendar,\n    plain: true,\n    icon: icon || MaskedInputIcon || /*#__PURE__*/React.createElement(CalendarIcon, {\n      size: iconSize\n    }),\n    margin: {\n      right: 'small'\n    }\n  }))));\n\n  if (inline) {\n    return /*#__PURE__*/React.createElement(Box, null, input, calendar);\n  }\n\n  if (open) {\n    return [input, /*#__PURE__*/React.createElement(Keyboard, {\n      key: \"drop\",\n      onEsc: function onEsc() {\n        return ref.current.focus();\n      }\n    }, /*#__PURE__*/React.createElement(Drop, _extends({\n      overflow: \"visible\",\n      id: id ? id + \"__drop\" : undefined,\n      target: ref.current,\n      align: _extends({\n        top: 'bottom',\n        left: 'left'\n      }, dropProps),\n      onEsc: closeCalendar,\n      onClickOutside: function onClickOutside(_ref4) {\n        var target = _ref4.target;\n\n        if (target !== containerRef.current && !containerRef.current.contains(target)) {\n          closeCalendar();\n        }\n      }\n    }, dropProps), calendar))];\n  }\n\n  return input;\n});\nDateInput.displayName = 'DateInput';\nDateInput.propTypes = DateInputPropTypes;\nexport { DateInput };"]},"metadata":{},"sourceType":"module"}